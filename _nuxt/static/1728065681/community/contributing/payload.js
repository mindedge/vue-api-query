__NUXT_JSONP__("/community/contributing", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad){return {data:[{document:{slug:"contributing",title:"Contributing",description:"Contributing to this package.",position:12,category:"Community",toc:[{id:C,depth:s,text:D},{id:E,depth:n,text:F},{id:G,depth:n,text:H},{id:x,depth:n,text:I},{id:t,depth:n,text:J},{id:u,depth:n,text:K},{id:y,depth:n,text:L},{id:z,depth:n,text:M},{id:N,depth:s,text:O},{id:p,depth:n,text:p},{id:q,depth:n,text:q},{id:P,depth:s,text:Q},{id:R,depth:s,text:S}],body:{type:"root",children:[{type:b,tag:v,props:{id:C},children:[{type:b,tag:g,props:{href:"#commit-guidelines",ariaHidden:h,tabIndex:i},children:[{type:b,tag:j,props:{className:[k,l]},children:[]}]},{type:a,value:D}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"We use "},{type:b,tag:g,props:{href:"https:\u002F\u002Fdocs.google.com\u002Fdocument\u002Fd\u002F1QrDFcIiPjSLDn3EL15IJygNPiHORgU1_OOAqWjiDU5Y\u002Fedit",rel:[T,U,V],target:W},children:[{type:a,value:"Angular Commit Message Conventions"}]},{type:a,value:". "}]},{type:a,value:c},{type:b,tag:o,props:{id:E},children:[{type:b,tag:g,props:{href:"#commit-message-format",ariaHidden:h,tabIndex:i},children:[{type:b,tag:j,props:{className:[k,l]},children:[]}]},{type:a,value:F}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Each commit message consists of a "},{type:b,tag:d,props:{},children:[{type:a,value:X}]},{type:a,value:Y},{type:b,tag:d,props:{},children:[{type:a,value:y}]},{type:a,value:Z},{type:b,tag:d,props:{},children:[{type:a,value:z}]},{type:a,value:".  The header has a special\nformat that includes a "},{type:b,tag:d,props:{},children:[{type:a,value:x}]},{type:a,value:Y},{type:b,tag:d,props:{},children:[{type:a,value:t}]},{type:a,value:Z},{type:b,tag:d,props:{},children:[{type:a,value:u}]},{type:a,value:":"}]},{type:a,value:c},{type:b,tag:"div",props:{className:["nuxt-content-highlight"]},children:[{type:b,tag:"pre",props:{className:["language-text","line-numbers"]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"\u003Ctype\u003E(\u003Cscope\u003E): \u003Csubject\u003E\n\u003CBLANK LINE\u003E\n\u003Cbody\u003E\n\u003CBLANK LINE\u003E\n\u003Cfooter\u003E\n"}]}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:A},{type:b,tag:d,props:{},children:[{type:a,value:X}]},{type:a,value:" is mandatory and the "},{type:b,tag:d,props:{},children:[{type:a,value:t}]},{type:a,value:" of the header is optional."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Any line of the commit message cannot be longer than 100 characters! This allows the message to be easier\nto read on GitHub as well as in various git tools."}]},{type:a,value:c},{type:b,tag:o,props:{id:G},children:[{type:b,tag:g,props:{href:"#revert",ariaHidden:h,tabIndex:i},children:[{type:b,tag:j,props:{className:[k,l]},children:[]}]},{type:a,value:H}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"If the commit reverts a previous commit, it should begin with "},{type:b,tag:e,props:{},children:[{type:a,value:"revert: "}]},{type:a,value:", followed by the header\nof the reverted commit.\nIn the body it should say: "},{type:b,tag:e,props:{},children:[{type:a,value:"This reverts commit \u003Chash\u003E."}]},{type:a,value:", where the hash is the SHA of the commit\nbeing reverted."}]},{type:a,value:c},{type:b,tag:o,props:{id:x},children:[{type:b,tag:g,props:{href:"#type",ariaHidden:h,tabIndex:i},children:[{type:b,tag:j,props:{className:[k,l]},children:[]}]},{type:a,value:I}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Must be one of the following:"}]},{type:a,value:c},{type:b,tag:_,props:{},children:[{type:a,value:c},{type:b,tag:m,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"feat"}]},{type:a,value:": A new feature"}]},{type:a,value:c},{type:b,tag:m,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"fix"}]},{type:a,value:": A bug fix"}]},{type:a,value:c},{type:b,tag:m,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"docs"}]},{type:a,value:": Documentation only changes"}]},{type:a,value:c},{type:b,tag:m,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"style"}]},{type:a,value:": Changes that do not affect the meaning of the code (white-space, formatting, missing\nsemi-colons, etc)"}]},{type:a,value:c},{type:b,tag:m,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"refactor"}]},{type:a,value:": A code change that neither fixes a bug nor adds a feature"}]},{type:a,value:c},{type:b,tag:m,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"perf"}]},{type:a,value:": A code change that improves performance"}]},{type:a,value:c},{type:b,tag:m,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"test"}]},{type:a,value:": Adding missing or correcting existing tests"}]},{type:a,value:c},{type:b,tag:m,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"ci"}]},{type:a,value:": Changes to continuous integration."}]},{type:a,value:c},{type:b,tag:m,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"chore"}]},{type:a,value:": Changes to the build process or auxiliary tools and libraries such as documentation\ngeneration"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:o,props:{id:t},children:[{type:b,tag:g,props:{href:"#scope",ariaHidden:h,tabIndex:i},children:[{type:b,tag:j,props:{className:[k,l]},children:[]}]},{type:a,value:J}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"The scope could be anything specifying place of the commit change. For example "},{type:b,tag:e,props:{},children:[{type:a,value:"model"}]},{type:a,value:",\n"},{type:b,tag:e,props:{},children:[{type:a,value:"builder"}]},{type:a,value:", "},{type:b,tag:e,props:{},children:[{type:a,value:"parser"}]},{type:a,value:", etc..."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"You can use "},{type:b,tag:e,props:{},children:[{type:a,value:"*"}]},{type:a,value:" when the change affects more than a single scope."}]},{type:a,value:c},{type:b,tag:o,props:{id:u},children:[{type:b,tag:g,props:{href:"#subject",ariaHidden:h,tabIndex:i},children:[{type:b,tag:j,props:{className:[k,l]},children:[]}]},{type:a,value:K}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"The subject contains succinct description of the change:"}]},{type:a,value:c},{type:b,tag:_,props:{},children:[{type:a,value:c},{type:b,tag:m,props:{},children:[{type:a,value:"use the imperative, present tense: \"change\" not \"changed\" nor \"changes\""}]},{type:a,value:c},{type:b,tag:m,props:{},children:[{type:a,value:"don't capitalize first letter"}]},{type:a,value:c},{type:b,tag:m,props:{},children:[{type:a,value:"no dot (.) at the end"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:o,props:{id:y},children:[{type:b,tag:g,props:{href:"#body",ariaHidden:h,tabIndex:i},children:[{type:b,tag:j,props:{className:[k,l]},children:[]}]},{type:a,value:L}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Just as in the "},{type:b,tag:d,props:{},children:[{type:a,value:u}]},{type:a,value:", use the imperative, present tense: \"change\" not \"changed\" nor \"changes\".\nThe body should include the motivation for the change and contrast this with previous behavior."}]},{type:a,value:c},{type:b,tag:o,props:{id:z},children:[{type:b,tag:g,props:{href:"#footer",ariaHidden:h,tabIndex:i},children:[{type:b,tag:j,props:{className:[k,l]},children:[]}]},{type:a,value:M}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"The footer should contain any information about "},{type:b,tag:d,props:{},children:[{type:a,value:$}]},{type:a,value:" and is also the place to\n[reference GitHub issues that this commit closes][closing-issues]."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:$}]},{type:a,value:" should start with the word "},{type:b,tag:e,props:{},children:[{type:a,value:"BREAKING CHANGE:"}]},{type:a,value:" with a space or two newlines.\nThe rest of the commit message is then used for this."}]},{type:a,value:c},{type:b,tag:v,props:{id:N},children:[{type:b,tag:g,props:{href:"#branches",ariaHidden:h,tabIndex:i},children:[{type:b,tag:j,props:{className:[k,l]},children:[]}]},{type:a,value:O}]},{type:a,value:c},{type:b,tag:o,props:{id:p},children:[{type:b,tag:g,props:{href:"#dev",ariaHidden:h,tabIndex:i},children:[{type:b,tag:j,props:{className:[k,l]},children:[]}]},{type:b,tag:e,props:{},children:[{type:a,value:p}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:A},{type:b,tag:e,props:{},children:[{type:a,value:p}]},{type:a,value:" branch is the default branch of the package. PR's should be based on it."}]},{type:a,value:c},{type:b,tag:o,props:{id:q},children:[{type:b,tag:g,props:{href:"#master",ariaHidden:h,tabIndex:i},children:[{type:b,tag:j,props:{className:[k,l]},children:[]}]},{type:b,tag:e,props:{},children:[{type:a,value:q}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:A},{type:b,tag:e,props:{},children:[{type:a,value:q}]},{type:a,value:" branch is a protected branch and is only used for releases. "}]},{type:a,value:c},{type:b,tag:"alert",props:{type:"danger"},children:[{type:a,value:"\nDo not commit directly to this branch. Use \n"},{type:b,tag:e,props:{},children:[{type:a,value:p}]},{type:a,value:"\n branch instead.\n"}]},{type:a,value:c},{type:b,tag:v,props:{id:P},children:[{type:b,tag:g,props:{href:"#releasing-a-new-version",ariaHidden:h,tabIndex:i},children:[{type:b,tag:j,props:{className:[k,l]},children:[]}]},{type:a,value:Q}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"In order to release a new version, a new PR from "},{type:b,tag:e,props:{},children:[{type:a,value:p}]},{type:a,value:" branch must be opened and merged into the "},{type:b,tag:e,props:{},children:[{type:a,value:q}]},{type:a,value:" branch."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:aa}]},{type:a,value:" will automatically make a release using\n"},{type:b,tag:g,props:{href:"https:\u002F\u002Fgithub.com\u002Fsemantic-release\u002Fsemantic-release",rel:[T,U,V],target:W},children:[{type:a,value:"semantic-release"}]},{type:a,value:"."}]},{type:a,value:"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{type:b,tag:"table",props:{},children:[{type:b,tag:"thead",props:{},children:[{type:b,tag:w,props:{},children:[{type:b,tag:ab,props:{},children:[{type:a,value:"Commit message"}]},{type:b,tag:ab,props:{},children:[{type:a,value:"Release type"}]}]}]},{type:b,tag:"tbody",props:{},children:[{type:b,tag:w,props:{},children:[{type:b,tag:r,props:{},children:[{type:b,tag:e,props:{},children:[{type:a,value:"fix(pencil): stop graphite breaking when too much pressure applied"}]}]},{type:b,tag:r,props:{},children:[{type:a,value:"Patch Release"}]}]},{type:b,tag:w,props:{},children:[{type:b,tag:r,props:{},children:[{type:b,tag:e,props:{},children:[{type:a,value:"feat(pencil): add 'graphiteWidth' option"}]}]},{type:b,tag:r,props:{},children:[{type:b,tag:ac,props:{},children:[{type:a,value:"Minor"}]},{type:a,value:" Feature Release"}]}]},{type:b,tag:w,props:{},children:[{type:b,tag:r,props:{},children:[{type:b,tag:e,props:{},children:[{type:a,value:"perf(pencil): remove graphiteWidth option"}]},{type:b,tag:B,props:{},children:[]},{type:b,tag:B,props:{},children:[]},{type:b,tag:e,props:{},children:[{type:a,value:"BREAKING CHANGE: The graphiteWidth option has been removed."}]},{type:b,tag:B,props:{},children:[]},{type:b,tag:e,props:{},children:[{type:a,value:"The default graphite width of 10mm is always used for performance reasons."}]}]},{type:b,tag:r,props:{},children:[{type:b,tag:ac,props:{},children:[{type:a,value:"Major"}]},{type:a,value:" Breaking Release"}]}]}]}]},{type:a,value:c},{type:b,tag:v,props:{id:R},children:[{type:b,tag:g,props:{href:"#deploying-documentation",ariaHidden:h,tabIndex:i},children:[{type:b,tag:j,props:{className:[k,l]},children:[]}]},{type:a,value:S}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Documentation changes must be based on "},{type:b,tag:e,props:{},children:[{type:a,value:p}]},{type:a,value:" branch. "}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:aa}]},{type:a,value:" will automatically\ndeploy the documentation when a new version is released."}]}]},dir:"\u002Fen\u002Fcommunity",path:"\u002Fen\u002Fcommunity\u002Fcontributing",extension:".md",createdAt:ad,updatedAt:ad,to:"\u002Fcommunity\u002Fcontributing"},prev:{slug:"vue",title:"Vue Usage Example",to:"\u002Fexamples\u002Fvue"},next:null}],fetch:[],mutations:[]}}("text","element","\n","strong","code","p","a","true",-1,"span","icon","icon-link","li",3,"h3","dev","master","td",2,"scope","subject","h2","tr","type","body","footer","The ","br","commit-guidelines","Commit Guidelines","commit-message-format","Commit Message Format","revert","Revert","Type","Scope","Subject","Body","Footer","branches","Branches","releasing-a-new-version","Releasing a New Version","deploying-documentation","Deploying Documentation","nofollow","noopener","noreferrer","_blank","header",", a "," and a ","ul","Breaking Changes","Github Action","th","del","2024-10-04T18:14:02.624Z")));